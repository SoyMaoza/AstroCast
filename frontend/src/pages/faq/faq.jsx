import React, { useState } from 'react';
import './Faq.css'; // Importaremos los estilos que crearemos a continuaci√≥n





// Datos de las preguntas y respuestas
const faqData = [
  {
    question: '¬øQu√© es Astro, el Asistente de la NASA?',
    answer: 'Astro es tu asistente personal dise√±ado para ayudarte a explorar y entender los datos clim√°ticos hist√≥ricos de la NASA. Puedes hacerle preguntas sobre temperatura, viento y otras variables para cualquier lugar del mundo.'
  },
  {
    question: '¬øQu√© tipo de datos puedo consultar?',
    answer: 'Puedes consultar una amplia gama de datos atmosf√©ricos del proyecto MERRA-2 de la NASA. Esto incluye temperatura, velocidad del viento, humedad, concentraci√≥n de polvo, entre otros, basados en registros hist√≥ricos desde 1980 hasta la actualidad.'
  },
  {
    question: '¬øC√≥mo puedo compartir mi historial de chat?',
    answer: 'Dentro de la ventana del chat, encontrar√°s un bot√≥n que dice "Compartir Historial üì≤". Al hacer clic, se te pedir√° un n√∫mero de WhatsApp para enviar una transcripci√≥n de tu conversaci√≥n con Astro.'
  },
  {
    question: '¬øLa informaci√≥n proporcionada es precisa?',
    answer: 'S√≠. Todos los datos provienen directamente del proyecto MERRA-2 de la NASA, que es una de las fuentes de rean√°lisis atmosf√©rico global m√°s confiables y utilizadas por cient√≠ficos de todo el mundo.'
  },
  {
    question: '¬øNecesito crear una cuenta para usar el asistente?',
    answer: 'No, no es necesario registrarse. El asistente Astro est√° dise√±ado para ser de acceso inmediato y f√°cil de usar sin necesidad de crear una cuenta.'
  },
  {
    question: '¬øA qui√©n puedo contactar si encuentro un problema t√©cnico?',
    answer: 'Si tienes alg√∫n problema o sugerencia, no dudes en contactar a nuestro equipo de soporte t√©cnico enviando un correo a: marioosuna0203@gmail.com'
  }
];

const Faq = () => {
  // Estado para controlar qu√© pregunta est√° abierta. 'null' significa que ninguna est√° abierta.
  const [openIndex, setOpenIndex] = useState(null);

  // Funci√≥n para manejar el clic en una pregunta
  const handleToggle = (index) => {
    // Si la pregunta clickeada ya est√° abierta, la cerramos. Si no, la abrimos.
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <div className="faq-container">
      <h1 className="faq-title">Preguntas Frecuentes (FAQ)</h1>
      <div className="faq-list">
        {faqData.map((item, index) => (
          <div key={index} className="faq-item">
            <button className="faq-question" onClick={() => handleToggle(index)}>
              <span>{item.question}</span>
              {/* El √≠cono cambia dependiendo de si la pregunta est√° abierta o cerrada */}
              <span className="faq-icon">{openIndex === index ? '‚àí' : '+'}</span>
            </button>
            {/* El contenido de la respuesta solo se muestra si el √≠ndice coincide con el estado abierto */}
            <div className={`faq-answer ${openIndex === index ? 'open' : ''}`}>
              <p>{item.answer}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};


export default Faq;